stages:
  - build
  - package
  - cross-cloud
  - cross-project

before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - mkdir ./auth

compile:
  image: golang:1.8.1
  stage: build
  script:
    - ln -s /builds /go/src/github.com
    - cd /go/src/github.com/coredns/coredns
    - go get github.com/mholt/caddy
    - make -j $(getconf _NPROCESSORS_ONLN)
        -f Makefile.release build-linux
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - build/
      
build-e2e:
  stage: build
  variables:
    COREDNS_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    COREDNS_DOCKER_IMAGE_TAG: "${CI_COMMIT_REF_SLUG}.job.${CI_JOB_ID}"
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE/coredns-e2e:$COREDNS_DOCKER_IMAGE_TAG" ./e2e/
    - docker push "$CI_REGISTRY_IMAGE/coredns-e2e:$COREDNS_DOCKER_IMAGE_TAG"

.tar:
  stage: package
  image: golang:1.8.1
  script:
    - make -f Makefile.release tar
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - release/
      
container:
  stage: package
  image: docker:17.05.0
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - cp build/Linux/coredns .
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo export COREDNS_IMAGE=$CI_REGISTRY_IMAGE | tee release.env
    - echo export COREDNS_TAG=$IMAGE_TAG | tee -a release.env
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - release.env

aws-cluster:
  stage: cross-cloud
  image: golang:1.8.1
  script:
    - >
      if [ "$BUILD_TRIGGER" == "yes" ]; then
        exit 0
      else
        apt update && apt install -y jq
        PROJECT_PIPELINE=$(curl -X POST -F token=$CROSS_CLOUD_CI_JOB_TOKEN -F ref=stable-v0.2.0-integrations -F "variables[KUBERNETES_BRANCH]=ci-v1.7.2" -F "variables[AWS_CLOUD]=aws" https://gitlab.cncf.ci/api/v4/projects/2/trigger/pipeline | jq '.id')
        echo 'Wait for Cluster "FIX ME / HACK"'
        until [ "$JOB_STATUS" == '"success"' ]; do JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="aws_k8s_deploy") | .status')" ; sleep 0.5 ; done ; echo 'Cluster Ready'
        PROJECT_JOB=$(curl --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="aws_k8s_deploy") | .id')
        export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
        curl -s -o kubeconfig -L "$BASE_URL/cncf/cross-cloud/-/jobs/${PROJECT_JOB}/artifacts/raw/data/aws-stable-v0-2-0-integrations/kubeconfig"
        cat ./kubeconfig | base64 | tee ./aws-kubeconfig
      fi
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - aws-kubeconfig


gce-cluster:
  stage: cross-cloud
  image: golang:1.8.1
  script:
    - >
      if [ "$BUILD_TRIGGER" == "yes" ]; then
        exit 0
      else
        apt update && apt install -y jq
        PROJECT_PIPELINE=$(curl -X POST -F token=$CROSS_CLOUD_CI_JOB_TOKEN -F ref=stable-v0.2.0-integrations -F "variables[KUBERNETES_BRANCH]=ci-v1.7.2" -F "variables[GCE_CLOUD]=gce" https://gitlab.cncf.ci/api/v4/projects/2/trigger/pipeline | jq '.id')
        echo 'Wait for Cluster "FIX ME / HACK"'
        until [ "$JOB_STATUS" == '"success"' ]; do JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="gce_k8s_deploy") | .status')" ; sleep 0.5 ; done ; echo 'Cluster Ready'
        PROJECT_JOB=$(curl --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="gce_k8s_deploy") | .id')
        export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
        curl -s -o kubeconfig -L "$BASE_URL/cncf/cross-cloud/-/jobs/${PROJECT_JOB}/artifacts/raw/data/gce-stable-v0-2-0-integrations/kubeconfig"
        cat ./kubeconfig | base64 | tee ./gce-kubeconfig
      fi
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - gce-kubeconfig


gke-cluster:
  stage: cross-cloud
  image: golang:1.8.1
  script:
    - >
      if [ "$BUILD_TRIGGER" == "yes" ]; then
        exit 0
      else
        apt update && apt install -y jq
        PROJECT_PIPELINE=$(curl -X POST -F token=$CROSS_CLOUD_CI_JOB_TOKEN -F ref=stable-v0.2.0-integrations -F "variables[KUBERNETES_BRANCH]=ci-v1.7.2" -F "variables[GKE_CLOUD]=gke" https://gitlab.cncf.ci/api/v4/projects/2/trigger/pipeline | jq '.id')
        until [ "$JOB_STATUS" == '"success"' ]; do JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="gke_k8s_deploy") | .status')" ; sleep 0.5 ; done ; echo 'Cluster Ready'
        echo $PROJECT_PIPELINE
        PROJECT_JOB=$(curl --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="gke_k8s_deploy") | .id')
        export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
        curl -s -o kubeconfig -L "$BASE_URL/cncf/cross-cloud/-/jobs/${PROJECT_JOB}/artifacts/raw/data/gke-stable-v0-2-0-integrations/kubeconfig"
        cat ./kubeconfig | base64 | tee ./gke-kubeconfig
      fi
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - gke-kubeconfig


packet-cluster:
  stage: cross-cloud
  image: golang:1.8.1
  script:
    - >
      if [ "$BUILD_TRIGGER" == "yes" ]; then
        exit 0
      else
        apt update && apt install -y jq
        PROJECT_PIPELINE=$(curl -X POST -F token=$CROSS_CLOUD_CI_JOB_TOKEN -F ref=stable-v0.2.0-integrations -F "variables[KUBERNETES_BRANCH]=ci-v1.7.2" -F "variables[PACKET_CLOUD]=packet" https://gitlab.cncf.ci/api/v4/projects/2/trigger/pipeline | jq '.id')
        until [ "$JOB_STATUS" == '"success"' ]; do JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="packet_k8s_deploy") | .status')" ; sleep 0.5 ; done ; echo 'Cluster Ready'
        PROJECT_JOB=$(curl --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/2/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="packet_k8s_deploy") | .id')
        export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
        curl -s -o kubeconfig -L "$BASE_URL/cncf/cross-cloud/-/jobs/${PROJECT_JOB}/artifacts/raw/data/packet-stable-v0-2-0-integrations/kubeconfig"
        cat ./kubeconfig | base64 | tee ./packet-kubeconfig
      fi
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - packet-kubeconfig

deploy:
  stage: cross-project
  image: buildpack-deps:stretch
  script:
    - apt update && apt install -y jq
    - AWS_KUBECONFIG=$(cat ./aws-kubeconfig | tr -d '\n')
    - GCE_KUBECONFIG=$(cat ./gce-kubeconfig | tr -d '\n')
    - GKE_KUBECONFIG=$(cat ./gke-kubeconfig | tr -d '\n')
    - PACKET_KUBECONFIG=$( cat ./packet-kubeconfig | tr -d '\n')
    - PROJECT_PIPELINE=$(curl -X POST -F token=$CROSS_PROJECT_CI_JOB_TOKEN -F ref=master -F "variables[COREDNS_COMMIT]=fb7473ec" -F "variables[AWS_KUBECONFIG]="${AWS_KUBECONFIG}"" -F "variables[GCE_KUBECONFIG]="${GCE_KUBECONFIG}"" -F "variables[GKE_KUBECONFIG]="${GKE_KUBECONFIG}"" -F "variables[PACKET_KUBECONFIG]="${PACKET_KUBECONFIG}"" https://gitlab.cncf.ci/api/v4/projects/45/trigger/pipeline | jq '.id')
    
    #AWS
    - JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/45/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="aws_coredns_deploy") | .status')"
    - until [ "$JOB_STATUS" == '"success"' ]; do JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/45/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="aws-coredns-deploy") | .status')" ; sleep 0.5 ; done ; echo 'Cluster Ready'
      
  # dependencies:
  #   - kubernetes-cluster
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - ./auth/
